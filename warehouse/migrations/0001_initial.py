# Generated by Django 5.1.4 on 2025-01-10 09:48

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('project_manager', models.CharField(max_length=255)),
                ('date_added', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('material_type', models.CharField(choices=[('Admixtures', '1-Admixtures'), ('Aggregates', '2-Aggregates'), ('Blocks', '3-Blocks'), ('Boards and Panels', '4-Boards and Panels'), ('Bricks', '5-Bricks'), ('Cement - Grey', '6-Cement - Grey'), ('Cement - White', '7-Cement - White'), ('CI / DI Covers', '8-CI / DI Covers'), ('CP Fittings', '9-CP Fittings'), ('Door Fittings', '10-Door Fittings'), ('Doors and Windows', '11-Doors and Windows'), ('Electrical Items', '12-Electrical Items'), ('Fabrics', '13-Fabrics'), ('Fuels', '14-Fuels'), ('Furniture', '15-Furniture'), ('Gates and Grills', '16-Gates and Grills'), ('GI Covers', '17-GI Covers'), ('Granite', '18-Granite'), ('Gypsum Vermiculite', '19-Gypsum Vermiculite'), ('Hardware', '20-Hardware'), ('Heaters and Coolers', '21-Heaters and Coolers'), ('Horticulture', '22-Horticulture'), ('IT Hardware', '23-IT Hardware'), ('IT Software', '24-IT Software'), ('Kitchen Equipments', '25-Kitchen Equipments'), ('Locks', '26-Locks'), ('Marble', '27-Marble'), ('Mechanical Spares', '28-Mechanical Spares'), ('Medicines', '29-Medicines'), ('Mirrors and Glass', '30-Mirrors and Glass'), ('General Items', '31-General Items'), ('Oils and Lubricants', '32-Oils and Lubricants'), ('Paints', '33-Paints'), ('Paver Blocks', '34-Paver Blocks'), ('Pest Control', '35-Pest Control'), ('Pipes/Pipe Fittings', '36-Pipes/Pipe Fittings'), ('Plant and Machinery', '37-Plant and Machinery'), ('Plumbing Items', '38-Plumbing Items'), ('Pre-Cast Items', '39-Pre-Cast Items'), ('PVC Cover Blocks', '40-PVC Cover Blocks'), ('Safety Equipments', '41-Safety Equipments'), ('Sand', '42-Sand'), ('Sanitary Wares', '43-Sanitary Wares'), ('Sealants/Adhesives', '44-Sealants/Adhesives'), ('Shuttering Materials', '45-Shuttering Materials'), ('Stationery', '46-Stationery'), ('Steel - Re Bars', '47-Steel - Re Bars'), ('Stones', '48-Stones'), ('Stoneware Pipes', '49-Stoneware Pipes'), ('Structural Steel', '50-Structural Steel'), ('TDR', '51-TDR'), ('Tiles', '52-Tiles'), ('Tools', '53-Tools'), ('Water', '54-Water'), ('Wood and Timber', '55-Wood and Timber'), ('Wooden Flooring', '56-Wooden Flooring'), ('Scrap Material', '57-Scrap Material'), ('BMS Systems', '58-BMS Systems'), ('Concrete', '59-Concrete'), ('Modular Kitchen', '60-Modular Kitchen'), ('Vehicle', '61-Vehicle'), ('Flat Re-purchase', '62-Flat Re-purchase'), ('White Goods', '63-White Goods'), ('Interior Items', '64-Interior Items'), ('Hotel', '65-Hotel'), ('Travel', '66-Travel'), ('Architect Foreign', '501-Architect Foreign'), ('Architect Local', '502-Architect Local'), ('BMS System', '503-BMS System'), ('Cabling Works', '504-Cabling Works'), ('Carpentry  Work', '505-Carpentry  Work'), ('Civil  Work', '506-Civil  Work'), ('D.G.Sets', '507-D.G.Sets'), ('Earthwork', '508-Earthwork'), ('Electrical work', '509-Electrical work'), ('Elevators', '510-Elevators'), ('Fabrication Work', '511-Fabrication Work'), ('False Ceiling Work', '512-False Ceiling Work'), ('Fire Fighting Sys.', '513-Fire Fighting Sys.'), ('Flooring&Dado Tiling', '514-Flooring&Dado Tiling'), ('Gas Connection', '515-Gas Connection'), ('Glass  Works', '516-Glass  Works'), ('H.V.A.C.System', '517-H.V.A.C.System'), ('Hydropnuematic Sys.', '518-Hydropnuematic Sys.'), ('Infrastructure Works', '519-Infrastructure Works'), ('Land  Dev. work', '520-Land  Dev. work'), ('LandScape work - Ext', '521-LandScape work - Ext'), ('Misc.Labour Work', '522-Misc.Labour Work'), ('Painting Work - Exte', '523-Painting Work - Exte'), ('Painting Work - Inte', '524-Painting Work - Inte'), ('Piling Work', '525-Piling Work'), ('Plumb.&Drainage Work', '526-Plumb.&Drainage Work'), ('Polishing works', '527-Polishing works'), ('Gypsum Plaster Work', '528-Gypsum Plaster Work'), ('PVC Doors and Porta', '529-PVC Doors and Porta'), ('R&M Building', '530-R&M Building'), ('R&M FireFightingSys.', '531-R&M FireFightingSys.'), ('R&M HVAC', '532-R&M HVAC'), ('R&M Other Asset', '533-R&M Other Asset'), ('R&M Plant & M/C', '534-R&M Plant & M/C'), ('R.C.C. Consultant', '535-R.C.C. Consultant'), ('Rain Water Harvestin', '536-Rain Water Harvestin'), ('RMC', '537-RMC'), ('Road & Drainage Work', '538-Road & Drainage Work'), ('SewageTreatmentPlant', '539-SewageTreatmentPlant'), ('Soil Investigation', '540-Soil Investigation'), ('Struct. Steel Work', '541-Struct. Steel Work'), ('Technical Consultant', '542-Technical Consultant'), ('Telecom system', '543-Telecom system'), ('Traffic Signal & Sig', '544-Traffic Signal & Sig'), ('Transport Services', '545-Transport Services'), ('Vigilance CCTV Sys.', '546-Vigilance CCTV Sys.'), ('Watermain works', '547-Watermain works'), ('Waterproofing Work', '548-Waterproofing Work'), ('WaterTreatmentPlant', '549-WaterTreatmentPlant'), ('Al. window/str. glaz', '550-Al. window/str. glaz'), ('Hiring Charges - equ', '551-Hiring Charges - equ'), ('Solar Hot water syst', '552-Solar Hot water syst'), ('LandSc.Garden works', '553-LandSc.Garden works'), ('Acid Washing', '554-Acid Washing'), ('Compound Wall works', '555-Compound Wall works'), ('Internal Services', '556-Internal Services'), ('Interior Work', '557-Interior Work'), ('Security Services', '558-Security Services'), ('Project Construction', '559-Project Construction'), ('Sales & Marketing', '560-Sales & Marketing'), ('Pest Control Work', '561-Pest Control Work'), ('Wooden Flooring Work', '562-Wooden Flooring Work'), ('Material Testing', '563-Material Testing'), ('R&M Vehicle', '564-R&M Vehicle'), ('Service Tax', '565-Service Tax'), ('Professional Consult', '566-Professional Consult'), ('HR', '567-HR'), ('Construction Service', '568-Construction Service'), ('Earth Filling Work', '569-Earth Filling Work'), ('Fencing & Boundary', '570-Fencing & Boundary'), ('Rock cutting work', '571-Rock cutting work'), ('Air Conditioning Wrk', '572-Air Conditioning Wrk'), ('IT Services', '573-IT Services'), ('Legal Services', '574-Legal Services'), ('Lease material group', '575-Lease material group'), ('Lease mat grp LEASE', '576-Lease mat grp LEASE')], max_length=50)),
                ('hsn_code', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('material_code', models.CharField(blank=True, default=None, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Building Manager'), ('warehouse_keeper', 'Warehouse Keeper')], default='warehouse_keeper', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BuildingReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(max_length=50)),
                ('generated_on', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.building')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('loan_date', models.DateTimeField(auto_now_add=True)),
                ('repayment_date', models.DateTimeField(blank=True, null=True)),
                ('from_building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans_given', to='warehouse.building')),
                ('to_building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans_received', to='warehouse.building')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.material')),
            ],
        ),
        migrations.CreateModel(
            name='Inward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(max_length=255)),
                ('supplier', models.CharField(max_length=255)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('date_inward', models.DateField()),
                ('expiration_date', models.DateField(blank=True, default=None, null=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.building')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.material')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('Add', 'Add'), ('Consume', 'Consume'), ('Loan', 'Loan'), ('Repayment', 'Repayment')], max_length=50)),
                ('quantity', models.PositiveIntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.building')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.material')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('building', models.CharField(max_length=100)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.material')),
            ],
        ),
        migrations.CreateModel(
            name='BuildingMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.building')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.material')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumptions', to='warehouse.building')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumptions', to='warehouse.material')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialLoan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('loan_date', models.DateField(auto_now_add=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Returned', 'Returned')], default='Pending', max_length=50)),
                ('borrowing_building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_loans_received', to='warehouse.building')),
                ('lending_building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_loans_given', to='warehouse.building')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.material')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialRepayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('repayment_date', models.DateField(auto_now_add=True)),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repayments', to='warehouse.materialloan')),
            ],
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold', models.PositiveIntegerField()),
                ('alert_date', models.DateTimeField(auto_now_add=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.material')),
            ],
        ),
    ]
